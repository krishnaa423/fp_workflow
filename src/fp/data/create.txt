#region modules
from fp.flows.fullgridflow import FullGridFlow
from fp.flows.flow_manage import FlowManage
from fp.jobs.relax import RelaxJob
from fp.jobs.scf import ScfJob
from fp.jobs.dfpt import DfptJob
from fp.jobs.phbands import PhbandsJob
from fp.jobs.phdos import PhdosJob
from fp.jobs.phmodes import PhmodesJob
from fp.jobs.dos import DosJob
from fp.jobs.pdos import PdosJob
from fp.jobs.dftelbands import DftelbandsJob
from fp.jobs.kpdos import KpdosJob
from fp.jobs.wannier import WannierJob
from fp.jobs.wfngeneral import WfnJob
from fp.jobs.wfngeneral import WfnqJob
from fp.jobs.epw import EpwJob
from fp.jobs.wfngeneral import WfnfiJob
from fp.jobs.wfngeneral import WfnqfiJob
from fp.jobs.epsilon import EpsilonJob
from fp.jobs.sigma import SigmaJob
from fp.jobs.inteqp import InteqpJob
from fp.jobs.kernel import KernelJob
from fp.jobs.abs import AbsorptionJob
from fp.jobs.abs import PlotxctJob
from fp.jobs.bseq import BseqJob
from fp.jobs.xctph import XctPhJob
# from fp.jobs.xctpol import XctPolJob
from fp.jobs.convergence import ConvergenceJob
from ase import Atoms
from ase.io import read, write
import numpy as np
import os
#endregions

#region variables
#endregions

#region functions
def main():
    list_of_steps = [
        RelaxJob,
        ScfJob,
        # ScfAbacusJob,
        # MdJob,
        # MdAbacusJob,
        # DfptJob,
        # PhfinitediffJob,
        # PhbandsJob,
        # PhdosJob,
        # PhmodesJob,
        # DosJob,
        # PdosJob,
        # DftelbandsJob,
        # KpdosJob,
        # WannierJob,
        # WfnJob,
        # EpwJob,
        # ElphJob,
        # WfnqJob,
        # WfnfiJob,
        # WfnqfiJob,
        # EpsilonJob,
        # SigmaJob,
        # InteqpJob,
        # KernelJob,
        # AbsorptionJob,
        # PlotxctJob,
        # BseqJob,
        # XctPhJob,
        # EsfJob,
        # XctPolJob,
        # SteJob,
        # EsdJob,
        ConvergenceJob,
        ## VCA doping stuff. Can't for now, as there is a fractional electrons bug. 
        ## copy relax stuff. 
        ## supercell path. 
        ## pyscf, abacus, gpaw.
        ## understand pseudo generation. 
        ## debug the removing ./tmp issue.
    ]

    FullGridFlow.create_from_list(
        source_flowfile=None,
        source_input_dict=FullGridFlow.from_yml('./flow.yml').input_dict,
        list_of_steps=list_of_steps,
        dest_directory='./',
        create_interactive=True,
        copy_additional=[],
        # start_idx=0,
        # stop_idx=-1,
    )
#endregions

#region classes
#endregions

#region main
if __name__=='__main__':
    main()
#endregions
